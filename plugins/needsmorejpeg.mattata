--[[
    Copyright 2017 Matthew Hesketh <wrxck0@gmail.com>
    This code is licensed under the MIT. See LICENSE for details.
]]

local needsmorejpeg = {}
local mattata = require('mattata')

function needsmorejpeg:init()
    needsmorejpeg.commands = mattata.commands(self.info.username):command('needsmorejpeg').table
    needsmorejpeg.help = '/needsmorejpeg - Gives the replied-to photo more JPEG!'
end

function needsmorejpeg:on_message(message, configuration, language)
    if not message.reply then
        return mattata.send_reply(message, 'Please reply to the photo you\'d like to give more JPEG.')
    elseif not message.reply.photo then
        return mattata.send_reply(message, 'The replied-to message must be a compressed photo for this to work!')
    end
    local photo = message.reply.photo[#message.reply.photo]
    local file = mattata.get_file(photo.file_id)
    if not file or not file.result then
        return mattata.send_reply(message, 'An error occured whilst downloading that file from Telegram\'s server. Please re-upload it, and try again.')
    end
    local path = 'https://api.telegram.org/file/bot' .. configuration.bot_token .. '/' .. file.result.file_path
    os.execute('wget --quiet --timeout=1 --directory-prefix=photos --no-clobber ' .. path)
    local new_file = file.result.file_path:gsub('/', '/edited_')
    os.execute('convert ' .. file.result.file_path .. ' -quality 10 ' .. new_file)
    local success = mattata.send_photo(message.chat.id, new_file)
    os.execute('rm ' .. new_file)
    return success
end

return needsmorejpeg